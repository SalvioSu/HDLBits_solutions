module top_module (
    input clk,
    input areset,
    input x,
    output z
); 
    parameter A = 2'b01, B = 2'b10;
    reg [1:0] state, next_state;
    always @(posedge areset, posedge clk) begin
        if (areset)
            state <= A;
        else
            state <= next_state;
    end
    assign next_state = {{state[1]|x}, {state[0]&(!x)}};
    assign z = state[0]&x | state[1]&(!x);
endmodule

