module top_module(
    input clk,
    input areset,    // Freshly brainwashed Lemmings walk left.
    input bump_left,
    input bump_right,
    input ground,
    output walk_left,
    output walk_right,
    output aaah ); 
	
    parameter LEFT = 2'b00, RIGHT = 2'b01, FALL_L = 2'b10, FALL_R = 2'b11;
    reg [1:0] state, next_state;
    
    always @(*) begin
        case (state)
            2'b00 : begin
                if (~ground)
                    next_state <= FALL_L;
                else
                    next_state <= (bump_left)? RIGHT : LEFT;
            end
            2'b01 : begin
                if (~ground)
                    next_state <= FALL_R;
                else
                    next_state <= (bump_right)? LEFT : RIGHT;
            end
            2'b10 : next_state <= (ground)? LEFT : FALL_L;
            2'b11 : next_state <= (ground)? RIGHT : FALL_R;
        endcase
    end
    
    always @(posedge clk, posedge areset) begin
        if (areset)
            state <= LEFT;
        else
            state <= next_state;
    end
    
    assign walk_left = (state == 2'b00);
    assign walk_right = (state == 2'b01);
    assign aaah = (state[1] == 1);
    
endmodule

