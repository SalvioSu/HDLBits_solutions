module top_module (
    input clk,
    input areset,
    input x,
    output z
); 
	parameter idle = 0, s1 = 1, s2 = 2;
    reg [1:0] state, next_state;
    always @(posedge areset, posedge clk) begin
        if (areset)
            state <= idle;
        else
            state <= next_state;
    end
    always @(*) begin
        case (state)
            idle: next_state = (x)? s1:idle;
            s1: next_state = (x)? s2:s1;
            s2: next_state = (x)? s2:s1;
            default: next_state = idle;
        endcase
    end
    assign z = (state==s1)? 1:0;
endmodule

